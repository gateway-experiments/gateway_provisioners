[build-system]
requires = ["hatchling>=1.4"]
build-backend = "hatchling.build"

[project]
name = "remote_provisioners"
description = "Remote Provisioners - a package containing provisioner implementations supporting remote kernels."
classifiers = [
  "Framework :: Jupyter",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3"
]
requires-python = ">=3.8"
dependencies = [
    "jupyter_client>=7.2",
    "overrides",
    "paramiko>=2.4.0",
    "pexpect>=4.2.0",
    "pycryptodomex>=3.9.7",
    "tornado>=6.1",
    "traitlets>=5.1"
]
dynamic = ["version"]

[[project.authors]]
name = "Jupyter Development Team"
email = "jupyter@googlegroups.org"

[project.readme]
file = "README.md"
content-type = "text/markdown"


[project.license]
file = "LICENSE"

[project.urls]
Homepage = "https://jupyter.org"
Documentation = "https://remote-provisioners.readthedocs.io/"
Source = "https://github.com/kevin-bates/remote_provisioners"
Tracker = "https://github.com/kevin-bates/remote_provisioners/issues"

[project.optional-dependencies]
test = [
  "mock",
  "pre-commit",
  "pytest",
  "pytest-cov",
  "pytest-timeout",
]
docs = [
  "mistune<1",
  "myst-parser",
  "pydata_sphinx_theme",
  "sphinx",
  "sphinx-copybutton",
  "sphinx-markdown-tables",
  "sphinx_book_theme",
  "sphinxcontrib-mermaid",
  "sphinxcontrib-openapi",
  "sphinxcontrib_github_alt",
  "sphinxemoji",
  "tornado"
]
dev = [
  "coverage",
  "pre-commit",
  "build",
  "twine",
]
kerberos = [
    "requests_kerberos"
]
yarn = [
    "yarn-api-client"
]
k8s = [
    "kubernetes>=18.20.0",
    "jinja2>=3.1"
]
docker = [
    "docker>=3.5.0"
]

[project.scripts]
jupyter-k8s-spec = "remote_provisioners.cli.k8s_specapp:K8sProvisionerApp.launch_instance"
jupyter-yarn-spec = "remote_provisioners.cli.yarn_specapp:YarnProvisionerApp.launch_instance"
jupyter-ssh-spec = "remote_provisioners.cli.ssh_specapp:SshProvisionerApp.launch_instance"
jupyter-docker-spec = "remote_provisioners.cli.docker_specapp:DockerProvisionerApp.launch_instance"
jupyter-image-bootstrap = "remote_provisioners.cli.image_bootstrapapp:ImageBootstrapApp.launch_instance"

[project.entry-points."jupyter_client.kernel_provisioners"]
yarn-provisioner = "remote_provisioners.yarn:YarnProvisioner"
distributed-provisioner = "remote_provisioners.distributed:DistributedProvisioner"
kubernetes-provisioner = "remote_provisioners.k8s:KubernetesProvisioner"
docker-provisioner = "remote_provisioners.docker_swarm:DockerProvisioner"
docker-swarm-provisioner = "remote_provisioners.docker_swarm:DockerSwarmProvisioner"

[tool.hatch.version]
path = "remote_provisioners/_version.py"

[tool.hatch.build]
artifacts = ["remote_provisioners/kernel-launchers/scala/lib"]

[tool.hatch.envs.docs]
features = ["docs"]
[tool.hatch.envs.docs.scripts]
build = "make -C docs html SPHINXOPTS='-W'"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = false
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
no_implicit_reexport = false
pretty = true
show_error_context = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_unused_configs = true
warn_redundant_casts = true
warn_return_any = false
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "traitlets.*",
    "jupyter_core.*",
    "entrypoints"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "-raXs --durations 10 --color=yes --doctest-modules"
testpaths = [
    "remote_provisioners/tests/"
]
filterwarnings= [
  # Fail on warnings
  "error",
]

[tool.flake8]
ignore = [
    # E402: module level import not at top of file
    # E501: line too long
    # W503: line break before binary operator
    # W504: line break after binary operator
    "E402", "E501", "W503", "W504"
]
exclude = [
    ".cache",
    ".github",
    "docs"
]
extend-ignore = [
    "G001", "G002", "G004", "G200", "G201", "G202",
    # black adds spaces around ':'
    "E203"
]
